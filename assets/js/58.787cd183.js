(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{257:function(t,a,s){t.exports=s.p+"assets/img/220111200.15141a08.png"},533:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",[t._v("Label 缓存模式")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("前言")]),t._v(" "),e("p",[t._v("根据实际应用场景设置 Label 的 "),e("code",[t._v("Cache Mode")]),t._v(" 属性，可以有效的优化 Label 绘制，减少 Drawcall。")])]),t._v(" "),e("br"),t._v(" "),e("h2",{attrs:{id:"一-缓存类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-缓存类型"}},[t._v("#")]),t._v(" 一. 缓存类型")]),t._v(" "),e("p",[e("img",{attrs:{src:s(257),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"_1-none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-none"}},[t._v("#")]),t._v(" 1. NONE:")]),t._v(" "),e("p",[t._v("默认值，会将 "),e("code",[t._v("Label")]),t._v(" 中的整段文本将生成一张位图， 但是并不参与动态合图。")]),t._v(" "),e("p",[t._v("不做任何缓存，文本内容进行一次绘制。")]),t._v(" "),e("h3",{attrs:{id:"_2-bitmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-bitmap"}},[t._v("#")]),t._v(" 2. BITMAP:")]),t._v(" "),e("p",[e("code",[t._v("『 将文本作为静态图像加入动态图集进行批次合并，但是不能频繁动态修改文本内容 』")]),t._v("。")]),t._v(" "),e("p",[t._v("选择后，Label 中的整段文本仍将生成一张位图，但是会尽量参与 动态合图。只要满足动态合图的要求，就会和动态合图中的其它 Sprite 或者 Label 合并 Draw Call。由于动态合图会占用更多内存，"),e("strong",[t._v("该模式只能用于文本不常更新的 Label")]),t._v("。")]),t._v(" "),e("p",[t._v("和 NONE 模式一样，BITMAP 模式会强制给每个 Label 组件生成一张位图，不论文本内容是否等同。如果场景中有大量相同文本的 Label，建议使用 CHAR 模式以复用内存空间。")]),t._v(" "),e("h3",{attrs:{id:"_3-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-char"}},[t._v("#")]),t._v(" 3. CHAR:")]),t._v(" "),e("p",[t._v("原理类似 "),e("code",[t._v("BMFont")]),t._v("，Label 将以“字”为单位将文本缓存到全局共享的位图中，相同字体样式和字号的每个字符将在全局共享一份缓存。能支持文本的频繁修改，对性能和内存最友好。")]),t._v(" "),e("p",[t._v("不过目前该模式还存在如下限制，我们将在后续的版本中进行优化：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("该模式只能用于字体样式和字号固定（通过记录字体的 fontSize、fontFamily、color、outline 为关键信息，以此进行字符的重复使用，其他有使用特殊自定义文本格式的需要注意），并且不会频繁出现巨量未使用过的字符的 Label")]),t._v("。这是为了节约缓存，因为全局共享的位图尺寸为 2048*2048，只有场景切换时才会清除，一旦位图被占满后新出现的字符将无法渲染。")]),t._v(" "),e("li",[t._v("不能参与动态合图（同样启用 CHAR 模式的多个 Label 在渲染顺序不被打断的情况下仍然能合并 Draw Call）")])]),t._v(" "),e("h4",{attrs:{id:"风险："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#风险："}},[t._v("#")]),t._v(" 风险：")]),t._v(" "),e("p",[t._v("字符图集的大小是受限的，总大小只有2048*2048。这里带来的风险是，不能无限制地使用 CHAR 模式来显示文字，因为有可能在图集重建之前把图集用完，用完的结果将导致后续使用 CHAR 模式的 Label 无法再正常显示文字，因为新的字符无法再往这张唯一的图集中继续添加了。")]),t._v(" "),e("h3",{attrs:{id:"_4-注意："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-注意："}},[t._v("#")]),t._v(" 4. 注意：")]),t._v(" "),e("ol",[e("li",[t._v("Cache Mode 对所有平台都有优化效果。")]),t._v(" "),e("li",[t._v("BITMAP 模式取代了原先的 "),e("code",[t._v("Batch As Bitmap")]),t._v(" 选项，旧项目如启用了 "),e("code",[t._v("Batch As Bitmap")]),t._v(" 将自动迁移至该选项。")]),t._v(" "),e("li",[t._v("使用缓存模式时不能剔除 "),e("strong",[t._v("项目 -> 项目设置 -> 模块设置")]),t._v(" 面板中的 "),e("code",[t._v("RenderTexture")]),t._v(" 模块。")])]),t._v(" "),e("h3",{attrs:{id:"_5-总结："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结："}},[t._v("#")]),t._v(" 5. 总结：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("Cache Mode")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("文本图片")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("最佳实践")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("NONE")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("单个 Label 使用一张节点大小的图片")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("适用频繁更新的不定文本，如：聊天功能")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("BITMAP")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("文本修改需要重绘，绘制后添加到 2048x2048 的通用动态图集中")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("适用内容不会改变的静态文本，如：界面标题")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("CHAR")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("每个字符绘制一次并添加到 2048x2048 的字符图集中")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("适用频繁更新且文本字符内容有限的文本，如：分数、倒计时等")])])])]),t._v(" "),e("br"),t._v(" "),e("h2",{attrs:{id:"二-char-无限模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-char-无限模式"}},[t._v("#")]),t._v(" 二. CHAR 无限模式")]),t._v(" "),e("p",[e("code",[t._v("『 在唯一的一张图集上重复利用 』")]),t._v("。")]),t._v(" "),e("p",[t._v("这个思路的难点有如下几个：")]),t._v(" "),e("ol",[e("li",[t._v("如何判断某个字符已经是废弃状态？")]),t._v(" "),e("li",[t._v("如何快速找到一个可被重复利用的合适的字符在图集中的位置？")]),t._v(" "),e("li",[t._v("如果找不到一个合适的可重复利用的字符，还有没有可利用的新的图集空间容纳新的字符？")])]),t._v(" "),e("h3",{attrs:{id:"_1-难点分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-难点分析"}},[t._v("#")]),t._v(" 1. 难点分析")]),t._v(" "),e("h4",{attrs:{id:"a-如何判断某个字符已经是废弃状态？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-如何判断某个字符已经是废弃状态？"}},[t._v("#")]),t._v(" a. 如何判断某个字符已经是废弃状态？")]),t._v(" "),e("p",[t._v("文字图集上的每个字符可以用字典记录下它的位置和大小信息，还有一个是被引用的次数。")]),t._v(" "),e("p",[t._v('判断废弃的状态，可以通过对这个字符的引用次数来决定，例如一个 CHAR 模式的文本"abcaddae"渲染时，a字符的引用次数是3，b是1，c是1，d是2，e是1，那么文本被移除时，减除相应的引用计数即可。当某个字符的引用计数为0时，即代表它所占的图集位置是个废弃的状态，可以被回收再利用。')]),t._v(" "),e("h4",{attrs:{id:"b-如何快速找到一个可被重复利用的合适的字符在图集中的位置？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-如何快速找到一个可被重复利用的合适的字符在图集中的位置？"}},[t._v("#")]),t._v(" b. 如何快速找到一个可被重复利用的合适的字符在图集中的位置？")]),t._v(" "),e("p",[t._v("在第一点里面，我们创建的字符和图集位置的映射里面，有位置信息和大小信息。先筛选废弃状态再通过大小判断是不能容纳新的字符即可找到可重复利用的目标字符位置。")]),t._v(" "),e("h4",{attrs:{id:"c-如果找不到一个合适的可重复利用的字符，还有没有可利用的新的图集空间容纳新的字符？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-如果找不到一个合适的可重复利用的字符，还有没有可利用的新的图集空间容纳新的字符？"}},[t._v("#")]),t._v(" c. 如果找不到一个合适的可重复利用的字符，还有没有可利用的新的图集空间容纳新的字符？")]),t._v(" "),e("p",[t._v("这个问题比较好解决，我们在 2048*2048 的图集上，拿出一部分空间作为保留空间先不使用。")]),t._v(" "),e("p",[t._v("查找空间时，先查找非保留空间是不有合适位置，再查找是不有可重复利用的废弃空间。如果还没有，再到保留空间里面来添加新字符。")]),t._v(" "),e("p",[t._v("当然有人会说，如果保留空间也被使用完了怎么办？这个优化方案可以拉到文末查看。")]),t._v(" "),e("br"),t._v(" "),e("h2",{attrs:{id:"三-无限模式解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-无限模式解决方案"}},[t._v("#")]),t._v(" 三. 无限模式解决方案")]),t._v(" "),e("p",[t._v("这里，我们以获取字符图集的接口 "),e("code",[t._v("getLetterDefinitionForChar（letter-font.js）")]),t._v("为突破口，这个接口是用来查找并添加新的字符，"),e("strong",[t._v("新的查找思路如下：")])]),t._v(" "),e("h3",{attrs:{id:"_1-查询字是否存在"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-查询字是否存在"}},[t._v("#")]),t._v(" 1. 查询字是否存在")]),t._v(" "),e("p",[e("strong",[t._v("是否已经在当前 "),e("code",[t._v("this._fontDefDictionary._letterDefinitions")]),t._v(" 中存在？")])]),t._v(" "),e("p",[t._v("存在则直接返回。这是当前的流程中已经有的，保留即可！")]),t._v(" "),e("h3",{attrs:{id:"_2-查找图集安全区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-查找图集安全区"}},[t._v("#")]),t._v(" 2. 查找图集安全区")]),t._v(" "),e("p",[e("strong",[t._v("当前字符图集的安全区是否有足够空间插入新的字符？")])]),t._v(" "),e("p",[t._v("足够则执行添加新字符的流程。在 "),e("code",[t._v("LetterAtlas")]),t._v(" 中添加字段 "),e("code",[t._v("_safeHeight")]),t._v(" 用于保存当前安全区的图集高度：即 2048 的高度中有多少是可以随意添加字符集的，这里直接乘以自己设定的比例即可。")]),t._v(" "),e("p",[t._v("具体的查找过程是：")]),t._v(" "),e("h4",{attrs:{id:"a-计算新添加的字符的显示高度与宽度："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-计算新添加的字符的显示高度与宽度："}},[t._v("#")]),t._v(" a. 计算新添加的字符的显示高度与宽度：")]),t._v(" "),e("p",[t._v("通过 "),e("code",[t._v("textUtils.safeMeasureText")]),t._v(" 来计算。")]),t._v(" "),e("h4",{attrs:{id:"b-在图集的当前游标位置添加新的字符是否能成功？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#b-在图集的当前游标位置添加新的字符是否能成功？"}},[t._v("#")]),t._v(" b. 在图集的当前游标位置添加新的字符是否能成功？")]),t._v(" "),e("p",[t._v("宽度超过 2048，或高度超过 "),e("code",[t._v("_safeHeight")]),t._v(" 都算失败:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("canInsertLabel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("labelInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" char"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" force")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sizeArr "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LetterTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcTextSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("labelInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("char"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" width "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sizeArr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sizeArr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nextY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_nexty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" thisY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" width "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" space"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            thisY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_nexty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nextY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            nextY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" thisY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" space"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" maxY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" force "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_safeHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"c-能够添加，则走当前的插入新字符的流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-能够添加，则走当前的插入新字符的流程"}},[t._v("#")]),t._v(" c. 能够添加，则走当前的插入新字符的流程:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_insertNewLetter")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LetterTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" labelInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateRenderData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _letter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertLetterTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _letter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("char "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" char"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        temp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _letter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"_3-在废弃的字符统计中查找合适的字符大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-在废弃的字符统计中查找合适的字符大小"}},[t._v("#")]),t._v(" 3. 在废弃的字符统计中查找合适的字符大小")]),t._v(" "),e("p",[t._v("在废弃的字符统计中查找合适的字符大小，如果能找到，则执行废弃字符再复用流程。")]),t._v(" "),e("p",[t._v("在 letter-font.js 中添加字段："),e("code",[t._v("let _unusedLetterList = [];")])]),t._v(" "),e("p",[t._v("用于收集已经废弃的字符数组。数组里面存储的是 "),e("code",[t._v("FontLetterDefinition")]),t._v(" 对象。当然 "),e("code",[t._v("FontLetterDefinition")]),t._v(" 对象也需要新加几个字段：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符宽高用于后续被重新复用时判断是否能容纳下新的字符")]),t._v("\nletter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originW "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" letterTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nletter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originH "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" letterTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hash值是这个TTF字符的唯一标识，由颜色，字号，字体，描边等信息组成")]),t._v("\nletter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" letterTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用计数用于统计当前字符被引用的次数，判断是否是废弃状态")]),t._v("\nletter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refCount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h4",{attrs:{id:"查找方法-findunsedletterfor-char-的逻辑是："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查找方法-findunsedletterfor-char-的逻辑是："}},[t._v("#")]),t._v(" 查找方法 "),e("code",[t._v("findUnsedLetterFor(char)")]),t._v(" 的逻辑是：")]),t._v(" "),e("ul",[e("li",[t._v("判断数组 "),e("code",[t._v("_unusedLetterList")]),t._v(" 是否为空，如果为空则返回 null；")]),t._v(" "),e("li",[t._v("逐个判断废弃字符的 "),e("code",[t._v("originW")]),t._v(", "),e("code",[t._v("originH")]),t._v(" 是否 >= 当前新字符。（后期优化查找效率和命中率的位置就在这里）；")]),t._v(" "),e("li",[t._v("找到则返回当前的 "),e("code",[t._v("FontLetterDefinition")]),t._v(" 对象，否则返回n ull。")])]),t._v(" "),e("p",[t._v("如果 "),e("code",[t._v("findUnsedLetterFor")]),t._v(" 的返回值不为 null，则可以直接调用 "),e("code",[t._v("replaceLetterTexture")]),t._v(" 方法在废弃字符的位置上画上新的字符。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceLetterTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" char")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldHash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" texture "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_texture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_fontDefDictionary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_texture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawTextureAt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("texture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("u"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bleed"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bleed"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_width "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" bleed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" bleed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetY "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_offsetY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refCount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_dirty "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_fontDefDictionary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLetterDefinitions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lerrerTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_fontDefDictionary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_letterDefinitions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("oldHash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" oldLetter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("h3",{attrs:{id:"_4-在保留区域内判断是否有足够空间添加新字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-在保留区域内判断是否有足够空间添加新字符"}},[t._v("#")]),t._v(" 4. 在保留区域内判断是否有足够空间添加新字符")]),t._v(" "),e("p",[t._v("在保留区域内判断是否有足够空间添加新字符，如果有，则执行插入流程。")]),t._v(" "),e("p",[t._v("如果执行到这一步，说明新插入的字符大号比较大，前面显示的字符中都未出现过。那么就需要尝试在保留区域内去插入新的字符，这里和前面在安全区内插入字符是同样的过程，不同的是 "),e("code",[t._v("canInsertLabel")]),t._v(" 接口的 force 参数传入 true 即可在保留区域内去搜索图集位置。")]),t._v(" "),e("h3",{attrs:{id:"_5-否则报错！"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-否则报错！"}},[t._v("#")]),t._v(" 5. 否则报错！")]),t._v(" "),e("p",[t._v("经过以上所有步骤都无法找到合适的图集时，就要报错提醒了。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/NUjDaE0WAP3tf3G571GSsw#",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("br"),t._v(" "),e("br")])}),[],!1,null,null,null);a.default=n.exports}}]);