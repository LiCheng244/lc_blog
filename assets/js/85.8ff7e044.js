(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{491:function(t,a,e){t.exports=e.p+"assets/img/20101401.1a6e74d9.png"},696:function(t,a,e){"use strict";e.r(a);var _=e(6),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",[t._v("如何精确统计页面停留时长？")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("前言")]),t._v(" "),_("p",[t._v("页面停留时间（Time on Page）简称 "),_("code",[t._v("Tp")]),t._v("，是网站分析中很常见的一个指标，用于反映用户在某些页面上停留时间的长短，传统的Tp统计方法会存在一定的统计盲区，比如无法监控单页应用，没有考虑用户切换Tab、最小化窗口等操作场景。基于上述背景，重新调研和实现了精确统计页面停留时长的方案，需要 兼容单页应用和多页应用，并且不耦合或入侵业务代码。")])]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"一-页面生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一-页面生命周期"}},[t._v("#")]),t._v(" 一. 页面生命周期")]),t._v(" "),_("p",[t._v("我们可以把一个页面生命周期抽象为三个动作：「"),_("code",[t._v("进入")]),t._v("」、「"),_("code",[t._v("活跃状态切换")]),t._v("」、「"),_("code",[t._v("离开")]),t._v("」:")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("动作")])]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("触发行为")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("进入")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("首次加载、页面跳转、刷新、浏览器前进后退")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("活跃状态切换")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("页面失去焦点/获得焦点、切换窗口最小化、切换浏览器 tab、电脑睡眠和唤醒")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("离开")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("关闭窗口、界面跳转、刷新、浏览器前进后退")])])])]),t._v(" "),_("p",[t._v("如下图，计算页面停留时长既如何监控这三个动作，然后在对应触发的事件中记录时间戳，比如要统计活跃停留时长就把 active 区间相加即可，要统计总时长既 tn -t0 。")]),t._v(" "),_("p",[_("img",{attrs:{src:e(491),alt:""}})]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"二-监听页面进入和离开"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二-监听页面进入和离开"}},[t._v("#")]),t._v(" 二. 监听页面进入和离开")]),t._v(" "),_("p",[t._v("对于常规页面的 "),_("code",[t._v("首次加载")]),t._v("、"),_("code",[t._v("页面关闭")]),t._v("、"),_("code",[t._v("刷新")]),t._v(" 等操作都可以通过 "),_("code",[t._v("window.onload")]),t._v(" 和 "),_("code",[t._v("window.onbeforeunload")]),t._v(" 事件来监听页面进入和离开。")]),t._v(" "),_("p",[t._v("浏览器前进后退可以通过 "),_("code",[t._v("pageshow")]),t._v(" 和 "),_("code",[t._v("pagehide")]),t._v(" 处理。")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("load")]),t._v(" / "),_("code",[t._v("beforeunload")])]),t._v(" "),_("li",[_("code",[t._v("pageshow")]),t._v(" / "),_("code",[t._v("pagehide")])])]),t._v(" "),_("br"),t._v(" "),_("p",[t._v("对于单页应用内部的跳转可以转化为两个问题：")]),t._v(" "),_("ul",[_("li",[t._v("监听路由变化")]),t._v(" "),_("li",[t._v("判断变化的URL是否为不同页面")])]),t._v(" "),_("h3",{attrs:{id:"_1-监听路由变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-监听路由变化"}},[t._v("#")]),t._v(" 1. 监听路由变化")]),t._v(" "),_("p",[t._v("目前主流的单页应用大部分都是基于 "),_("code",[t._v("browserHistory")]),t._v(" (history api) 或者 "),_("code",[t._v("hashHistory")]),t._v(" 来做路由处理，我们可以通过监听路由变化来判断页面是否有可能切换。注意是有可能切换，因为URL发生变化不代表页面一定切换，具体的路由配置是由业务决定的（既URL和页面的匹配规则）。")]),t._v(" "),_("h4",{attrs:{id:"a-browserhistory"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#a-browserhistory"}},[t._v("#")]),t._v(" a. browserHistory")]),t._v(" "),_("p",[t._v("路由的变化本质都会调用 "),_("code",[t._v("History.pushState()")]),t._v(" 或 "),_("code",[t._v("History.replaceState()")]),t._v(" ，能监听到这两个事件就能知道。通过 popstate 事件能解决一半问题，因为 popstate 只会在浏览器前进后退的时候触发，当调用 "),_("code",[t._v("history.pushState()")]),t._v(" 或者 "),_("code",[t._v("history.replaceState()")]),t._v(" 的时候并不会触发。")]),t._v(" "),_("h4",{attrs:{id:"b-hashhistory"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#b-hashhistory"}},[t._v("#")]),t._v(" b. hashHistory")]),t._v(" "),_("p",[_("code",[t._v("hashHistory")]),t._v(" 的实现是基于 hash 的变化，hash 的变化可以通过"),_("code",[t._v("hashchange")]),t._v("来监听。")]),t._v(" "),_("h3",{attrs:{id:"_2-判断url是否为不同页面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-判断url是否为不同页面"}},[t._v("#")]),t._v(" 2. 判断URL是否为不同页面")]),t._v(" "),_("h4",{attrs:{id:"方案-a-客户端定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方案-a-客户端定义"}},[t._v("#")]),t._v(" 方案 a: 客户端定义")]),t._v(" "),_("p",[t._v("通过业务方在初始化的时候配置页面规则，然后JS通过URL匹配不同的规则来区分不同的页面，这种方案在客户端数据上报的时候就已经明确了不同的页面。")]),t._v(" "),_("h4",{attrs:{id:"方案-b-数据分析平台定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方案-b-数据分析平台定义"}},[t._v("#")]),t._v(" 方案 b: 数据分析平台定义")]),t._v(" "),_("p",[t._v("假设我们最终上报后有一个数据分析平台来展现，我们可以在类似数据平台来配置页面规则，这样在客户端实现的代码逻辑就不需要区分页面，而是每次URL发生变化就将数据上报，最终通过数据平台配置的页面URL规则来求和、过滤数据等。")]),t._v(" "),_("p",[t._v("当数据展现平台不支持配置URL规则来区分页面的时候，可以采用方案a；当有数据平台支持的时候采用方案b更合理；")]),t._v(" "),_("h3",{attrs:{id:"_3-整理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-整理"}},[t._v("#")]),t._v(" 3. 整理")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}}),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("首次加载")])]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[_("strong",[t._v("关闭窗口")])]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("刷新")])]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("页面跳转")])]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[_("strong",[t._v("浏览器前进后退")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("browserHistory")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("window.load")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("load/beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("pushState/replaceState")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("popState")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("hashHistory")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("window.load")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("load/beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("hashchange")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("hashchange")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("多页")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("window.load")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("load/beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("load/beforeunload")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("pageshow/pagehide")])])])]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"三-监听页面活跃状态切换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三-监听页面活跃状态切换"}},[t._v("#")]),t._v(" 三. 监听页面活跃状态切换")]),t._v(" "),_("p",[t._v("可以通过 "),_("code",[t._v("Page Visibility API")]),t._v(" 以及在 window 上声明 "),_("code",[t._v("onblur/onfocus")]),t._v(" 事件来处理。")]),t._v(" "),_("h3",{attrs:{id:"_1-page-visibility-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-page-visibility-api"}},[t._v("#")]),t._v(" 1. Page Visibility API")]),t._v(" "),_("p",[t._v("一个网页的可见状态可以通过 Page Visibility API 获取，比如当用户 切换浏览器Tab、最小化窗口、电脑睡眠 的时候，系统API会派发一个当前页面可见状态变化的 visibilitychange 事件，然后在事件绑定函数中通过 "),_("code",[t._v("document.hidden")]),t._v(" 或者 "),_("code",[t._v("document.visibilityState")]),t._v(" 读取当前状态。")]),t._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[t._v("document"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'visibilitychange'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\tconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hidden"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("visibilityState"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),_("h3",{attrs:{id:"_2-onblur-onfocus"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-onblur-onfocus"}},[t._v("#")]),t._v(" 2. onblur/onfocus")]),t._v(" "),_("p",[t._v("可以通过 Page Visibility API 以及在 window 上声明 "),_("code",[t._v("onblur/onfocus")]),t._v(" 事件来处理。对于PC端来说，除了监听上述相关事件外，还可以考虑监听鼠标行为，比如当一定时间内鼠标没有操作则认为用户处于非活跃状态。")]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"四-上报数据时机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四-上报数据时机"}},[t._v("#")]),t._v(" 四. 上报数据时机")]),t._v(" "),_("h3",{attrs:{id:"_1-页面离开时上报"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-页面离开时上报"}},[t._v("#")]),t._v(" 1. 页面离开时上报")]),t._v(" "),_("p",[t._v("对于页面刷新或者关闭窗口触发的操作可能会造成数据丢失。")]),t._v(" "),_("h3",{attrs:{id:"_2-下次打开页面时上报"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-下次打开页面时上报"}},[t._v("#")]),t._v(" 2. 下次打开页面时上报")]),t._v(" "),_("p",[t._v("会丢失历史访问记录中的最后一个页面数据。")]),t._v(" "),_("h3",{attrs:{id:"_3-总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[t._v("#")]),t._v(" 3. 总结")]),t._v(" "),_("p",[t._v("对于单页内部跳转是即时上报，对于单页/多页应用触发 "),_("code",[t._v("window.onbeforeunload")]),t._v(" 事件的时候会把当前页面数据暂存在 "),_("code",[t._v("localStorage")]),t._v(" 中，当用户下次进入页面的时候会把暂存数据上报。")]),t._v(" "),_("p",[t._v("有个细节问题，如果用户下次打开页面是在第二天，对于统计当天的活跃时长会有一定的误差，所以在数据上报的同时会把该条数据的页面进入时间/离开时间带上。")]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"五-思考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五-思考"}},[t._v("#")]),t._v(" 五. 思考")]),t._v(" "),_("p",[t._v("对于页面停留时长的定义可能在不同场景会有差异：")]),t._v(" "),_("ul",[_("li",[t._v("比如内部业务系统或者OA系统，产品可能更关心用户在页面的活跃时长；")]),t._v(" "),_("li",[t._v("对于资讯类型的产品，页面可见时长会更有价值")])]),t._v(" "),_("p",[t._v("单一的数据对业务分析是有限的，所以在具体的代码实过程中我们会把停留时长分三个指标，这样能更好的帮助产品/运营分析：")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("active")]),t._v(" 页面活跃时长")]),t._v(" "),_("li",[_("code",[t._v("visible")]),t._v(" 页面可见时长 //仅支持Desktop")]),t._v(" "),_("li",[_("code",[t._v("duration")]),t._v(" 页面总停留时长")])]),t._v(" "),_("hr"),t._v(" "),_("br"),t._v(" "),_("br"),t._v(" "),_("blockquote",[_("p",[t._v("作者： 小黄鸭编程社区")]),t._v(" "),_("p",[t._v("来源： 小黄鸭编程社区")]),t._v(" "),_("p",[t._v("链接："),_("a",{attrs:{href:"https://mp.weixin.qq.com/s/zpjOpqhz_w3402BTu4QHeQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/zpjOpqhz_w3402BTu4QHeQ"),_("OutboundLink")],1)]),t._v(" "),_("br"),t._v(" "),_("p",[t._v("著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])]),t._v(" "),_("br"),t._v(" "),_("br")])}),[],!1,null,null,null);a.default=v.exports}}]);