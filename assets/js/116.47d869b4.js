(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{550:function(e,v,_){"use strict";_.r(v);var o=_(6),d=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"shader"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#shader"}},[e._v("#")]),e._v(" Shader")]),e._v(" "),_("p",[_("code",[e._v("Shader")]),e._v(" 是一种给显卡 "),_("code",[e._v("GPU")]),e._v(" 执行的程序, 是一种绘制算法，显卡的渲染流水线加载 "),_("code",[e._v("Shader")]),e._v(" 代码后，就能够在绘制的时候执行 "),_("code",[e._v("Shader")]),e._v(" 的代码。"),_("code",[e._v("Cocos")]),e._v(" 有自己的一个"),_("code",[e._v("Shader")]),e._v(" 的结构，"),_("code",[e._v("Shader")]),e._v(" 的开发语言 "),_("code",[e._v("cocos")]),e._v(" 使用的是 "),_("code",[e._v("GLSL")]),e._v(" 编程语言。")]),e._v(" "),_("br"),e._v(" "),_("p",[_("code",[e._v("OpenGL")]),e._v(" 着色语言（OpenGL Shading Language）是用来在 "),_("code",[e._v("OpenGL")]),e._v(" 中着色编程的语言，也即开发人员写的短小的自定义程序，他们是在图形卡的 "),_("code",[e._v("GPU")]),e._v(" （Graphic Processor Unit图形处理单元）上执行的，代替了固定的渲染管线的一部分，使渲染管线中不同层次具有可编程性。比如：视图转换、投影转换等。"),_("code",[e._v("GLSL")]),e._v("（GL Shading Language）的着色器代码分成2个部分："),_("code",[e._v("Vertex Shader")]),e._v("（顶点着色器）和 "),_("code",[e._v("Fragment")]),e._v("（片断着色器），有时还会有 "),_("code",[e._v("Geometry Shader")]),e._v("（几何着色器）。负责运行顶点着色的是顶点着色器。它可以得到当前 "),_("code",[e._v("OpenGL")]),e._v(" 中的状态，"),_("code",[e._v("GLSL")]),e._v(" 内置变量进行传递。"),_("code",[e._v("GLSL")]),e._v(" 其使用C语言作为基础高阶着色语言，避免了使用汇编语言或硬件规格语言的复杂性。")])])}),[],!1,null,null,null);v.default=d.exports}}]);