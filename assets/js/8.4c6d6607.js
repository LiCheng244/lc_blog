(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{198:function(t,s,a){t.exports=a.p+"assets/img/18121703.79112956.gif"},199:function(t,s,a){t.exports=a.p+"assets/img/18121704.5a888195.gif"},200:function(t,s,a){t.exports=a.p+"assets/img/18121705.1fd92ec1.gif"},201:function(t,s,a){t.exports=a.p+"assets/img/18121706.e377b8f5.gif"},342:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",[t._v("在 UITableView 中使用计时器")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("引言:")]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("TableView")]),t._v(" 的 cell 中出现倒计时、计时器的功能，是非常常见的需求。但是稍有不慎就会出现一些莫名其妙的 bug。")]),t._v(" "),n("p",[t._v("本文给出在TableView 中使用"),n("code",[t._v("NSTimer")]),t._v("或者"),n("code",[t._v("DispatchSourcer")]),t._v("中常见的五种方式。当然下方第一种方式是常规做法，不过也是UITableView中使用NSTimer的一个坑。其他三种方式是为了绕过这个坑的解决方案。")])]),t._v(" "),n("br"),t._v(" "),n("p",[t._v("当然，本篇博客共涉及到了UITableView中使用定时器的四种实现方式，当然应该也还有其他实现方式，只不过目前我没有涉及到。欢迎在评论区提供其他实现方式，我会及时的整合到目前的Demo中。")]),t._v(" "),n("p",[t._v("接下来我们先来总结一下本篇博客所涉及的四种方式：")]),t._v(" "),n("ul",[n("li",[t._v("第一种就是直接在TableView的Cell上使用"),n("code",[t._v("NSTimer")]),t._v("，当然这种方式是有问题的，稍后会介绍。")]),t._v(" "),n("li",[t._v("第二种是将NSTimer添加到当前线程所对应的"),n("code",[t._v("RunLoop中的commonModes中")]),t._v("。")]),t._v(" "),n("li",[t._v("第三种是通过"),n("code",[t._v("Dispatch")]),t._v("中的"),n("code",[t._v("TimerSource")]),t._v("来实现定时器。")]),t._v(" "),n("li",[t._v("第四种是开启一个新的子线程，将NSTimer添加到这个子线程中的RunLoop中，并使用"),n("code",[t._v("DefaultRunLoopModes")]),t._v("来执行。")]),t._v(" "),n("li",[t._v("第五种方式就是使用"),n("code",[t._v("CADisplayLink")]),t._v("来实现。")])]),t._v(" "),n("br"),t._v(" "),n("h2",{attrs:{id:"i-直接使用nstimer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#i-直接使用nstimer"}},[t._v("#")]),t._v(" I. 直接使用NSTimer")]),t._v(" "),n("p",[t._v("首先我们按照常规做法，直接在UITableView的Cell上添加相应的NSTimer, 并使用scheduledTimer执行相应的代码块。这种方式没有什么特殊的就是对Timer的直接使用。下方是我们本部分的Timer的使用代码：")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("awakeFromNib "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" awakeFromNib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer scheduledTimerWithTimeInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" repeats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSTimer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _Nonnull timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate lc_currentDateWithFormat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"HH:MM:SS"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fallback on earlier versions")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("br"),t._v("\n上述代码比较简单，就是在Cell上添加了一个定时器，然后每1秒更新一次时间，并在Cell的 label 上显示，运行效果如下所示。从该运行效果中我们不难发现，当我们滑动TableView时，该定时器就停止了工作。具体原因**就是当前线程的`RunLoop`在TableView滑动时将`DefaultMode`切换到了`TrackingRunLoopMode`。因为Timer默认是添加在`RunLoop`上的`DefaultMode`上的，当Mode切换后Timer就停止了运行。**\n"),n("p",[t._v("但是当停止滑动后，Mode又切换了回来，所以Timer有可以正常工作了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(198),alt:""}})]),t._v(" "),n("p",[t._v("为了进一步看一下Mode的切换，我们可以在相应的地方获取当前线程的RunLoop并且打印对应的Mode。下方代码就是在TableView所对应的VC上添加的，我们在"),n("code",[t._v("viewDidLoad()")]),t._v("、"),n("code",[t._v("viewDidAppear()")]),t._v("以及"),n("code",[t._v("scrollViewDidScroll()")]),t._v("这个代理方法中对当前线程所对应的"),n("code",[t._v("RunLoop")]),t._v("下的"),n("code",[t._v("currentMode")]),t._v("进行了打印，其代码如下:")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" setupTableViewLayout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"viewDidLoad = %@"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidAppear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("animated "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidAppear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("animated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"viewDidAppear = %@"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("scrollViewDidScroll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UIScrollView "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("scrollView "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"scrollViewDidScroll = %@"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("br"),t._v(" "),n("p",[t._v("下方就是最终的运行结果。从输出结果中我们不难看出，在"),n("code",[t._v("viewDidLoad()")]),t._v("方法中打印的"),n("code",[t._v("Current Mode")]),t._v("为"),n("code",[t._v("UIInitializationRunLoopMode")]),t._v(", 从该Mode的名字中我们不难发现，该Mode负责UI的初始化。在"),n("code",[t._v("viewDidApperar()")]),t._v("方法中，也就是UI显示后，RunLoop的Mode切换成了"),n("code",[t._v("kCFRunLoopDefaultMode")]),t._v("。紧接着，我们去滑动TableView，然后在"),n("code",[t._v("scrollViewDidScroll()")]),t._v("代理方法中打印滑动时当前RunLoop所对应的Mode。从下方运行结果不难看出，当TableView滑动时，打印出的"),n("code",[t._v("currentModel")]),t._v("为"),n("code",[t._v("UITrackingRunLoopMode")]),t._v("。当停止滑动后，点击"),n("code",[t._v("Show Current Mode")]),t._v("按钮获取当前Model时，打印的有时"),n("code",[t._v("RunLoopDefaultMode")]),t._v("。具体如下所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(199),alt:""}})]),t._v(" "),n("br"),t._v(" "),n("h2",{attrs:{id:"ii-添加到commonmode中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ii-添加到commonmode中"}},[t._v("#")]),t._v(" II. 添加到CommonMode中")]),t._v(" "),n("p",[t._v("上一部分的定时器是不能正常运行的，因为NSTimer对象默认添加到了当前RunLoop的DefaultMode中，而在切换成"),n("code",[t._v("TrackingRunLoopMode")]),t._v("时，定时器就停止了工作。解决该问题最直接方法是，将NSTimer在"),n("code",[t._v("TrackingRunLoopMode")]),t._v("中也添加一份。这样的话无论是在DefaultMode还是"),n("code",[t._v("TrackingRunLoopMode")]),t._v("中，定时器都会正常的工作。")]),t._v(" "),n("p",[t._v("如果你对RunLoop比较熟悉的话，可以知道"),n("code",[t._v("CommonModes")]),t._v("就是"),n("code",[t._v("DefaultMode")]),t._v("和"),n("code",[t._v("TrackingRunLoopMode")]),t._v("的集合，所以我们只需要将NSTimer对象与当前线程所对应的"),n("code",[t._v("RunLoop")]),t._v("中的"),n("code",[t._v("CommonModes")]),t._v("关联即可，具体代码如下所示：")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[t._v("\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer scheduledTimerWithTimeInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" repeats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSTimer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _Nonnull timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate lc_currentDateWithFormat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"HH:MM:SS"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" addTimer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer forMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSRunLoopCommonModes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fallback on earlier versions")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("br"),t._v(" "),n("p",[t._v("上述代码与第一部分的代码不同的地方在于我们将创建好的定时器添加到了当前 RunLoop 中的 CommonModes 中，这样的话可以保证 TableView 在滑动时定时器也可以正常运行。上述代码最终的运行效果如下所示:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(200),alt:""}})]),t._v(" "),n("p",[t._v("从该运行效果我们不难发现，当该 TableView 滚动式，其 Cell 上的定时器是可以正常工作的。但是当我们滑动右上角的这个 TableView 时，第一个的 TableView 中的定时器也是不能正常工作的，因为这些 TableView 都在主线程中工作，也就是说这些 TableView 所在的 RunLoop 是同一个。")]),t._v(" "),n("br"),t._v(" "),n("h2",{attrs:{id:"iii-添加到子线程的runloop下的defaultmode中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iii-添加到子线程的runloop下的defaultmode中"}},[t._v("#")]),t._v(" III. 添加到子线程的RunLoop下的DefaultMode中")]),t._v(" "),n("p",[t._v("接下来我们来看另一种解决方案，就是开启一个新的子线程，然后将 Timer 添加到这个子线程所对应的 RunLoop 中。当然因为是子线程的 RunLoop ，在添加 Timer 时，我们可以将 Timer 添加到子线程中的 RunLoop 中的 DefaultMode 中。添加完毕后，手动运行该 RunLoop。")]),t._v(" "),n("p",[t._v("因为是在子线程中添加的 Timer, Timer 肯定是在子线程中工作的，所以在更新UI时，我们需要在主线程中进行更新，具体代码如下所示：")]),t._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建队列")]),t._v("\n    dispatch_queue_t queue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_global_queue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DISPATCH_QUEUE_PRIORITY_DEFAULT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer scheduledTimerWithTimeInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" repeats"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES block"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSTimer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _Nonnull timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate lc_currentDateWithFormat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"HH:MM:SS"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                \n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回到主线程")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_main_queue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" addTimer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer forMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSRunLoopCommonModes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fallback on earlier versions")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n")])])]),n("p",[t._v("在上述代码中我们可以看到我们使用全局的并行队列来异步创建了一个 Timer 对象，然后将该对象添加进了该异步线程中的 DefaultRunLoopMode 中，然后运行该 RunLoop 。当然在子线程中更新 UI 还是需要在主线程中去操作的。下方就是上述代码的运行效果。从该效果中我们不难看出，当滑动 TableView 时定时器是可以正常工作的。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(201),alt:""}})]),t._v(" "),n("br"),t._v(" "),n("h2",{attrs:{id:"iv-dispatchtimersource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iv-dispatchtimersource"}},[t._v("#")]),t._v(" IV. DispatchTimerSource")]),t._v(" "),n("br")])}),[],!1,null,null,null);s.default=e.exports}}]);